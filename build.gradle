buildscript {
    ext {
        springBootVersion = '2.4.1' // '2.1.0.RELEASE'
        groovyVersion = '3.0.3'
        spockVersion = '2.0-M4-groovy-3.0' //'1.2-groovy-2.5'
        springCloudVersion = 'Finchley.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {

    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'groovy'
    intellij {
        plugins 'org.another.plugin:1.0'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ml'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.codehaus.groovy:groovy:$groovyVersion")
    testImplementation("org.spockframework:spock-core:$spockVersion")
    testImplementation("org.spockframework:spock-spring:$spockVersion")
//    testCompile('org.junit.jupiter:junit-jupiter-api:5.7.0')
//    testCompile('org.junit.jupiter:junit-jupiter-engine:5.7.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation('commons-io:commons-io:2.7')
    implementation('org.jgrapht:jgrapht-core:1.5.0')
    implementation('org.jgrapht:jgrapht-ext:1.5.0')

    implementation('org.deeplearning4j:deeplearning4j-core:0.9.1')
    implementation('org.deeplearning4j:deeplearning4j-nlp:0.9.1')
    implementation('org.deeplearning4j:deeplearning4j-nn:0.9.1')

}

test {
    useJUnitPlatform()
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

compileJava {
    options.incremental = true
    options.compilerArgs << '-parameters'
    options.compilerArgs << '-Xlint:unchecked'
}

